<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <!-- 콘솔 로그 -->
    <property name="REQ_LOG_PATTERN"
              value="[REQUEST ] %d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] [requestId=%X{requestId}] [memberId=%X{memberId}] %logger{36} - %msg%n"/>

    <property name="INTERNAL_LOG_PATTERN"
              value="[INTERNAL] %d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{36} - %msg%n"/>

    <appender name="REQ_CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="com.picpic.common.filter.LogRoutingFilter">
            <acceptIfRequestIdExists>true</acceptIfRequestIdExists>
        </filter>
        <encoder>
            <pattern>${REQ_LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <appender name="INTERNAL_CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="com.picpic.common.filter.LogRoutingFilter">
            <acceptIfRequestIdExists>false</acceptIfRequestIdExists>
        </filter>
        <encoder>
            <pattern>${INTERNAL_LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <springProfile name="prod, dev">
        <root level="INFO">
            <appender-ref ref="REQ_CONSOLE"/>
            <appender-ref ref="INTERNAL_CONSOLE"/>
        </root>
    </springProfile>

    <springProfile name="default">
        <!-- JSON 로그 파일 -->
        <appender name="JSON_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <fileNamePattern>logs/log.%d{yyyy-MM-dd}.json</fileNamePattern>
                <maxHistory>30</maxHistory>
            </rollingPolicy>
            <encoder class="net.logstash.logback.encoder.LogstashEncoder"/>
        </appender>

        <!-- 콘솔: 전체 로그를 INFO 이상 출력 -->
        <root level="INFO">
            <appender-ref ref="REQ_CONSOLE"/>
            <appender-ref ref="INTERNAL_CONSOLE"/>
            <appender-ref ref="JSON_FILE"/>
        </root>

    </springProfile>

</configuration>
